{"version":3,"sources":["GameOver.jsx","App.js","serviceWorker.js","index.js"],"names":["GameOver","props","react_default","a","createElement","className","score","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","addEventListener","window","checkKey","removeEventListener","changeGride","e","setState","size","target","value","restartGame","getFontStyle","num","2","fontSize","backgroundColor","4","8","color","16","32","64","128","256","background","512","1024","2048","val","isGameOver","isWon","grid","startGame","event","keyCode","makeAMove","copyGrid","newGrid","i","length","push","j","compareGrid","direction","_this$state","state","isFliped","isRotated","flipGrid","rotateGrid","operate","addNumber","console","log","row","move","merge","reverse","getGrid","options","x","y","random","Math","floor","r","filter","Array","fill","concat","_this$state2","num1","num2","game","gamerVariations","_this2","_this$state3","onChange","map","key","onClick","style","width","src_GameOver","rKey","cell","cKey","Component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.050ec8a4.chunk.js","sourcesContent":["import React from \"react\";\n\nconst GameOver = (props) => {\n    return <div className=\"game-over\">\n        <p>Game Over</p>\n        <p>Score: {props.score}</p>\n    </div>\n}\n\nexport default GameOver;","import React, { Component } from \"react\";\nimport './App.css';\nimport GameOver from './GameOver.jsx';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    let game = this.startGame(4);\n    this.state = {\n      size: 4,\n      gamerVariations: [4,8,16],\n      isGameOver: false,\n      isWon: false,\n      score: 0,\n      grid: game\n    };\n  }\n\n  componentDidMount() {\n    this.addEventListener()\n  }\n\n  render() {\n    const { grid, isGameOver, score, isWon, gamerVariations, size } = this.state;\n    return (\n      <div className=\"App\">\n        <div className=\"header\">\n          <div className=\"clearfix mgBtm-20\">\n            <div className=\"pull-left\">\n              <select onChange={(e) => this.changeGride(e)}>\n                {gamerVariations.map((val, key) => {\n                  return <option value={val} key={key}>{val} Grid</option>\n                })}\n              </select>\n              {isWon ? <h2>You won Game</h2> : null}\n              {isGameOver ? <h3>Game over</h3> : null}\n            </div>\n          </div>\n          <div className=\"clearfix mgBtm-20\">\n            <div className=\"pull-left\">\n              Score: <div className=\"score\">{score}</div>\n            </div>\n            <button className=\"pull-right\" onClick={e => this.restartGame(size)}>Restart</button>\n          </div>\n          <p>Use 1, 2, 3, 4 key to move left,right,up and down</p>\n        </div>\n        <div className=\"game\" style={{width: 90*size}}>\n          {isGameOver ? <GameOver score={score}/> : null}\n          {grid.map((row, rKey) => {\n            return (\n              <div className=\"row\" key={rKey}>\n                {row.map((cell, cKey) => {\n                  return (\n                    <div\n                      className=\"cell\"\n                      key={cKey}\n                      style={this.getFontStyle(cell)}\n                    >\n                      {cell === 0 ? null : cell}\n                    </div>\n                  );\n                })}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n\n  addEventListener = () => {\n    window.addEventListener(\"keydown\", this.checkKey, false);\n  }\n\n  removeEventListener = () => {\n    window.removeEventListener(\"keydown\", this.checkKey, false);\n  }\n\n  changeGride = e => {\n    this.setState({\n      size: e.target.value\n    });\n\n    this.restartGame(e.target.value);\n  }\n\n  getFontStyle = num => {\n    const size = {\n      2: {\n        fontSize: 60,\n        backgroundColor: \"#eee4da\"\n      },\n      4: {\n        fontSize: 60,\n        backgroundColor: \"#eee1c9\"\n      },\n      8: {\n        fontSize: 60,\n        color: \"#f9f6f2\",\n        backgroundColor: \"#f3b27a\"\n      },\n      16: {\n        fontSize: 60,\n        color: \"#f9f6f2\",\n        backgroundColor: \"#f69664\"\n      },\n      32: {\n        fontSize: 60,\n        color: \"#f9f6f2\",\n        backgroundColor: \"#f77c5f\"\n      },\n      64: {\n        fontSize: 60,\n        color: \"#f9f6f2\",\n        backgroundColor: \"#f75f3b\"\n      },\n      128: {\n        fontSize: 40,\n        color: \"#f9f6f2\",\n        backgroundColor: \"#edd073\"\n      },\n      256: {\n        fontSize: 40,\n        color: \"#f9f6f2\",\n        background: \"#edcc62\"\n      },\n      512: {\n        fontSize: 40,\n        color: \"#f9f6f2\",\n        background: \"#edc950\"\n      },\n      1024: {\n        fontSize: 30,\n        color: \"#f9f6f2\",\n        background: \"#edc53f\"\n      },\n      2048: {\n        fontSize: 30,\n        color: \"#f9f6f2\",\n        background: \"#edc22e\"\n      }\n    };\n\n    return size[num];\n  };\n\n  restartGame = val => {\n    this.setState({\n      score: 0,\n      isGameOver: false,\n      isWon: false,\n      grid: this.startGame(val)\n    });\n\n    this.removeEventListener();\n    this.addEventListener();\n  };\n\n  checkKey = e => {\n    e = e || window.event;\n    if (e.keyCode >= 49 && e.keyCode <= 52) {\n      this.makeAMove(e.keyCode - 49);\n    }\n  };\n\n  copyGrid = grid => {\n    let newGrid = [];\n    for (let i = 0; i < grid.length; i++) {\n      newGrid.push([]);\n      for (let j = 0; j < grid.length; j++) {\n        newGrid[i][j] = grid[i][j];\n      }\n    }\n    return newGrid;\n  };\n\n  compareGrid = (newGrid, grid) => {\n    for (let i = 0; i < grid.length; i++) {\n      for (let j = 0; j < grid.length; j++) {\n        if (newGrid[i][j] !== grid[i][j]) {\n          return false;\n        }\n      }\n    }\n    return true;\n  };\n\n  makeAMove = direction => {\n    // 0 > left, 1 > right , 2 > up, 3 > down\n    const { grid, size } = this.state;\n    let newGrid = this.copyGrid(grid);\n    let isFliped = false;\n    let isRotated = false;\n    if (grid.length > 0) {\n      switch (direction) {\n        case 0:\n          // console.log(\"left move\");\n          newGrid = this.flipGrid(newGrid);\n          isFliped = true;\n          break;\n        case 1:\n          // console.log(\"righ move\");\n          break;\n        case 2:\n          // console.log(\"up move\");\n          newGrid = this.rotateGrid(newGrid);\n          newGrid = this.flipGrid(newGrid);\n          isRotated = true;\n          isFliped = true;\n          break;\n        default:\n          // 3\n          // console.log(\"down move\");\n          newGrid = this.rotateGrid(newGrid);\n          isRotated = true;\n          break;\n      }\n\n      for (let i = 0; i < size; i++) {\n        newGrid[i] = this.operate(newGrid[i]);\n      }\n      if (isFliped) {\n        newGrid = this.flipGrid(newGrid);\n      }\n      if (isRotated) {\n        newGrid = this.rotateGrid(newGrid);\n      }\n\n      if (!this.compareGrid(newGrid, grid)) {\n        newGrid = this.addNumber(newGrid);\n        let isGameOver = this.isGameOver(newGrid);\n        if (newGrid) {\n          this.setState({ grid: newGrid, isGameOver });\n        }\n        if (isGameOver) {\n          this.removeEventListener();\n          console.log(\"Game over\");\n        }\n      }\n    }\n  };\n\n  isGameOver = grid => {\n    for (let i = 0; i < grid.length; i++) {\n      for (let j = 0; j < grid.length; j++) {\n        if (grid[i][j] === 0) {\n          return false;\n        }\n\n        if (i !== 3 && grid[i][j] === grid[i + 1][j]) {\n          return false;\n        }\n\n        if (j !== 3 && grid[i][j] === grid[i][j + 1]) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  };\n\n  operate = row => {\n    row = this.move(row);\n    row = this.merge(row);\n    row = this.move(row);\n    return row;\n  };\n\n  flipGrid = grid => {\n    for (let i = 0; i < grid.length; i++) {\n      grid[i].reverse();\n    }\n    return grid;\n  };\n\n  rotateGrid = grid => {\n    let newGrid = [];\n    for (let i = 0; i < grid.length; i++) {\n      newGrid.push([]);\n      for (let j = 0; j < grid.length; j++) {\n        newGrid[i][j] = grid[j][i];\n      }\n    }\n    return newGrid;\n  };\n\n  getGrid = size => {\n    let grid = [];\n    for (let i = 0; i < size; i++) {\n      grid.push([]);\n      for (let j = 0; j < size; j++) {\n        grid[i][j] = 0;\n      }\n    }\n    return grid;\n  };\n\n  addNumber = grid => {\n    let options = [];\n    for (let i = 0; i < grid.length; i++) {\n      for (let j = 0; j < grid.length; j++) {\n        if (grid[i][j] === 0) {\n          options.push({\n            x: i,\n            y: j\n          });\n        }\n      }\n    }\n\n    if (options.length > 0) {\n      let random = options[Math.floor(Math.random() * options.length)];\n      let r = Math.random();\n      grid[random.x][random.y] = r > 0.3 ? 2 : 4;\n      return grid;\n    }\n\n    return null;\n  };\n\n  startGame = size => {\n    let grid = this.getGrid(size);\n    grid = this.addNumber(grid);\n    grid = this.addNumber(grid);\n    return grid;\n  };\n\n  move = grid => {\n    let newGrid = grid.filter(val => val);\n    let zero = new Array(grid.length - newGrid.length).fill(0);\n    return zero.concat(newGrid);\n  };\n\n  merge = grid => {\n    let { score, isWon } = this.state;\n    for (let i = grid.length; i > 0; --i) {\n      let num1 = grid[i];\n      let num2 = grid[i - 1];\n      if (num1 === num2) {\n        grid[i] = num1 + num2;\n        score += grid[i];\n        grid[i - 1] = 0;\n      }\n\n      if (grid[i] >= 2048) {\n        isWon = true;\n      }\n    }\n    this.setState({ score: score, isWon: isWon });\n    return grid;\n  };\n}\n\nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}